openapi: 3.0.0
info:
  version: "1.0.0"
  title: "Gin Basic API"
paths:
  /pong:
    get:
      summary: "Ping endpoint"
      responses:
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /signup:
    post:
      summary: "Sign up a new user"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: "Successful account creation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    type: object
                    properties:
                      user_id:
                        type: string
                      nickname:
                        type: string
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  cause:
                    type: string

  /users/{id}:
    get:
      summary: "Get user details by user_id"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Successfully retrieved user details"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    type: object
                    properties:
                      user_id:
                        type: string
                      nickname:
                        type: string
                      comment:
                        type: string
        '404':
          description: "User not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

    patch:
      summary: "Update user details by user_id"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                comment:
                  type: string
      responses:
        '200':
          description: "Successfully updated user details"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  recipe:
                    type: object
                    properties:
                      nickname:
                        type: string
                      comment:
                        type: string
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  cause:
                    type: string
        '404':
          description: "User not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /close:
    post:
      summary: "Close and delete user account"
      responses:
        '200':
          description: "Successfully removed user account"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: "User not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
